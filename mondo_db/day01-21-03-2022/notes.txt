[ 21/03/2022 18:15 ]

~ Section 1: Introduction

- What are tables known as in mongoDB?
    + Collections

- What is compass?
    + MongoDB GUI

- What is Atlas?
    + Cloud 

- What is mongoDB?
    + Is a noSQL based database which means data is not logicallay related in the form of tables
    + Instead, collections are used to store data 
    + Stores data in json like format (BSON), or an javascript object
    + It is schemaless which means fields or attributes are not fixed
    + Therefore, mongoDB is more flexible as compared to noSQL

- Where mongoDB performs well?
    + In CRUD operations that's frequently manipulating and managing large data

- Why do we use mongoDB?
    + Mongo means huge or extreme
    + MondoDB handles humongous data very efficienly

- What are some characteristics of MongoDB?
    + It's fast, flexible, scalable, and easy to use 

- Why execution of mongoDB is fast?
    + Because it does not merge tables like in sql, whereas collections contains in itself
    all the related data, so there's no need for integration which saves a lot of time

- How do we get the services that are currently running on our windows machine?
    + Search and execute "services" from taskbar

- How to start and stop mongoDB server from your machine?
    + By writing following commands on cmd:
        >> net start mongoDB
        >> net stop mongoDB // to stop the service

- How do we use mongoDB services?
    + Through client i.e. your interactive shell to talk to the server

- How do we start clinet or aka the interactive shell?
    + run "mongoDB.exe" from your program files
    
- Why do we use mongoimport?
    + Used to import data to perform CRUD operations on

- What command is used to get all the database?
    >> show dbs

- Some commands:
    >> use DATABASE_NAME // to switched to a new or already existing database
    >> db.COLLECTION_NAME.insertOne({name: "..", price: 123}) // to insert some data
    // note above command will create a new collection if not existed
    >> db.COLLECTION_NAME.find() // to fetch data
    >> db.COLLECTION_NAME.find().pretty() // OR