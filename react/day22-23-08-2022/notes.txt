[ 23/08/2022 16:30 ]

-- The Redirect Component

+ Client-side Redirect

+ We can mimic the behaavior of server-side redirects using react routers

- When to redirect?
    + Submits a form
    + Incase of 404 Error redirect user
    + And, so on!

+ Redirecting dynamically 

- There are two ways to implement client-side redirection:
    1) Using <Redirect to="[route]" /> Component
        + It's not a buttion
        + When anywhere in code this Component has run, you'll be redirect to the intended route

    [ OLD WAY ]
    2) Using push() method of useHistory hook
        + This method is useful when you have to perfom some operations on users data before redirecting them to a route
            const history = useHistory();
            history.push('/');


    [ NEW WAY ]
    3) Using useNavigate() hook
        const navigate = useNavigate();
        navigate('/');

+ React hooks can not be used in class based components

-- Implementing a back buttion
    + Use the "useHistory" hooks method goBack()
    const history = useHistory();
    history.goBack();
    